{
  "version": 3,
  "sources": ["f/to32.js", "f/update.js", "f/param.js", "0.js"],
  "sourcesContent": ["\n\nexport default (\n    (d,i) => {\n        return (d[i++] ^ (d[i++] << 8) ^ (d[i++] << 16) ^ (d[i] << 24));\n    }\n);\n", "\n// [default]:\n// byte_counter = 0\n// rounds = 20\n\nexport default (\n    (data, key_stream, byte_counter, rounds, block_size, mix, param, ROUND_DATA) => {\n        var\n            I = 0,\n            L = data.length,\n\n            i = 0,\n            b = 0,\n            j = 0,\n\n            ro = ROUND_DATA[0],\n\n            _a = 0,\n            _b = 0,\n            _c = 0,\n            _d = 0,\n\n            D = 0,\n            byte_counter = 0\n        ;\n        \n        for (; I < L; I++) {\n            if (\n                (byte_counter === block_size)\n                ? (\n                    (byte_counter = 0),\n                    true\n                )\n                : (byte_counter === 0)\n            ) {\n\n                i = 0;\n                for (; i < 16; i++) {\n                    mix[i] = param[i]\n                }\n                \n                i = 0;\n                for (; i < rounds; i += 2) {\n                    j = 0;\n                    for (;j<8;j++) {\n                        \n                        mix[\n                            _d = (ro = ROUND_DATA[j])[3]\n                        ] = (\n                            ((D = mix[_d] ^ (mix[_a = ro[0]] += mix[_b = ro[1]])) << 16)\n                            | (D >>> 16)\n                        );\n                        mix[_b] = (((D = (mix[_b] ^ (mix[_c = ro[2]] += mix[_d]))) << 12) | (D >>> 20));\n                        mix[_d] = (((D = (mix[_d] ^ (mix[_a] += mix[_b]))) << 8)  | (D >>> 24));\n                        mix[_b] = (((D = (mix[_b] ^ (mix[_c] += mix[_d]))) << 7)  | (D >>> 25));\n                    \n                        mix[_a] >>>= 0;\n                        mix[_b] >>>= 0;\n                        mix[_c] >>>= 0;\n                        mix[_d] >>>= 0;\n                    }\n                }\n            \n                i = 0;\n                for (; i < 16; i++) {\n                    key_stream[b++] = (mix[i] += param[i]) & 0xFF;\n                    key_stream[b++] = (mix[i] >>> 8) & 0xFF;\n                    key_stream[b++] = (mix[i] >>> 16) & 0xFF;\n                    key_stream[b++] = (mix[i] >>> 24) & 0xFF;\n                };\n\n                param[12]++;\n            };\n            \n            data[I] ^= key_stream[byte_counter++];\n        }\n    \n        return data;\n    }\n);\n", "export default (\n    (key,counter,nonce,SIGMA,to32) => [\n        SIGMA[0],\n        SIGMA[1],\n        SIGMA[2],\n        SIGMA[3],\n\n        to32(key,0),\n        to32(key,4),\n        to32(key,8),\n        to32(key,12),\n\n        to32(key,16),\n        to32(key,20),\n        to32(key,24),\n        to32(key,28),\n\n        counter,\n        to32(nonce,0),\n        to32(nonce,4),\n        to32(nonce,8),\n    ]\n);\n", "\nexport * from './f/i.js';\n\nexport var\n    SIGMA = [0x61707865, 0x3320646e, 0x79622d32, 0x6b206574],\n    ROUND_DATA = [\n        [0, 4, 8, 12],\n        [1, 5, 9, 13],\n        [2, 6, 10, 14],\n        [3, 7, 11, 15],\n\n        [0, 5, 10, 15],\n        [1, 6, 11, 12],\n        [2, 7, 8, 13],\n        [3, 4, 9, 14],\n    ]\n;\n"],
  "mappings": "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",
  "names": ["to32_default", "d", "i", "update_default", "data", "key_stream", "byte_counter", "rounds", "block_size", "mix", "param", "ROUND_DATA", "I", "L", "i", "j", "ro", "_a", "_b", "_c", "_d", "D", "param_default", "key", "counter", "nonce", "SIGMA", "to32", "SIGMA", "ROUND_DATA"]
}
